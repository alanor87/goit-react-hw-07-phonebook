{"version":3,"sources":["components/PbookList/PbookList.module.css","components/InputForm/InputForm.module.css","components/Filter/Filter.module.css","redux/entries/entries-actions.js","redux/entries/entries-reducer.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/store.js","redux/entries/entries-operations.js","components/InputForm/InputForm.jsx","components/Filter/Filter.jsx","redux/entries/entries-selectors.js","components/PbookList/PbookList.jsx","App.js","index.js"],"names":["module","exports","addEntryRequest","createAction","addEntrySuccess","addEntryError","deleteEntryRequest","deleteEntrySuccess","deleteEntryError","fetchEntriesRequest","fetchEntriesSuccess","fetchEntriesError","entries","createReducer","_","payload","state","name","number","id","filter","entry","error","alert","loading","combineReducers","onChangeFilter","filterReducer","action","contactsReducer","items","entryReducer","rootReducer","contacts","store","configureStore","reducer","axios","defaults","baseURL","InputForm","onNameInput","event","setState","target","value","onNumberInput","onSubmitEntry","preventDefault","props","onAddEntry","reset","className","styles","newEntrySection","inputForm","onSubmit","this","type","onChange","required","newEntryButton","React","Component","connect","dispatch","post","then","responce","data","catch","message","addEntry","Filter","filterChangeHandler","getLoadingState","getFilteredContacts","createSelector","filterValue","includes","PbookList","onFetchEntries","onDelete","pbookHeader","pbookList","map","controlBtnContainer","entryControlBtn","data-id","onClick","Number","dataset","delete","get","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.939356dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"PbookList_entry__2X2-B\",\"pbookList\":\"PbookList_pbookList__1QGff\",\"pbookHeader\":\"PbookList_pbookHeader__10Vio\",\"controlBtnContainer\":\"PbookList_controlBtnContainer__wQ4cU\",\"entryControlBtn\":\"PbookList_entryControlBtn__qDVnJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newEntrySection\":\"InputForm_newEntrySection__2X8VI\",\"inputForm\":\"InputForm_inputForm__qniTV\",\"newEntryButton\":\"InputForm_newEntryButton__3WmKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1kscG\",\"filter-label\":\"Filter_filter-label__r_tbq\",\"filter-input\":\"Filter_filter-input__XU352\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addEntryRequest = createAction('entry/addEntryRequest');\r\nexport const addEntrySuccess = createAction('entry/addEntrySuccess');\r\nexport const addEntryError = createAction('entry/addEntryError');\r\n\r\nexport const deleteEntryRequest = createAction('entry/deleteEntryRequest');\r\nexport const deleteEntrySuccess = createAction('entry/deleteEntrySuccess');\r\nexport const deleteEntryError = createAction('entry/deleteEntryError');\r\n\r\nexport const fetchEntriesRequest = createAction('entry/fetchEntriesRequest');\r\nexport const fetchEntriesSuccess = createAction('entry/fetchEntriesSuccess');\r\nexport const fetchEntriesError = createAction('entry/fetchEntriesError');\r\n\r\n","\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchEntriesRequest,\r\n    fetchEntriesSuccess,\r\n    fetchEntriesError,\r\n    addEntryRequest,\r\n    addEntrySuccess,\r\n    addEntryError,\r\n    deleteEntryRequest,\r\n    deleteEntrySuccess,\r\n    deleteEntryError,\r\n} from './entries-actions';\r\n\r\nconst entries = createReducer([], {\r\n    [fetchEntriesSuccess]: (_, { payload }) => payload,\r\n    [addEntrySuccess]: (state, { payload }) => [...state, { name: payload.name, number: payload.number, id: payload.id }],\r\n    [deleteEntrySuccess]: (state, { payload }) => state.filter(entry => entry.id !== payload),\r\n});\r\n\r\nconst error = createReducer('', {\r\n    [fetchEntriesError]: (_, { payload }) => { alert('Error fetching item!'); return payload },\r\n    [addEntryError]: (_, { payload }) => { alert('Error adding item!'); return payload },\r\n    [deleteEntryError]: (_, { payload }) => { alert('Error deleting item!'); return payload },\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchEntriesRequest]: () => true,\r\n    [fetchEntriesSuccess]: () => false,\r\n    [addEntryRequest]: () => true,\r\n    [addEntrySuccess]: () => false,\r\n    [addEntryError]: () => false,\r\n    [deleteEntryRequest]: () => true,\r\n    [deleteEntrySuccess]: () => false,\r\n    [deleteEntryError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    entries,\r\n    loading,\r\n    error,\r\n})\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const onChangeFilter = createAction('changeFilter');\r\n","\r\nimport { onChangeFilter } from './filter-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const filterReducer = createReducer('',\r\n    {\r\n        [onChangeFilter]: (_, action) => action.payload\r\n    });","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport  entryReducer  from './entries/entries-reducer';\r\nimport { filterReducer } from './filter/filter-reducer';\r\n\r\nconst contactsReducer = combineReducers({\r\n    items: entryReducer,\r\n    filter: filterReducer,\r\n})\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst store = configureStore({reducer: rootReducer});\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nimport {\r\n    addEntryRequest,\r\n    addEntrySuccess,\r\n    addEntryError,\r\n    deleteEntryRequest,\r\n    deleteEntrySuccess,\r\n    deleteEntryError,\r\n    fetchEntriesRequest,\r\n    fetchEntriesSuccess,\r\n    fetchEntriesError,\r\n} from './entries-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchEntries = () => dispatch => {\r\n    dispatch(fetchEntriesRequest());\r\n    axios.get('/contacts')\r\n        .then(responce => dispatch(fetchEntriesSuccess(responce.data)))\r\n        .catch(error => dispatch(fetchEntriesError(error.message)))\r\n}\r\n\r\nexport const addEntry = entry => dispatch => {\r\n\r\n    dispatch(addEntryRequest());\r\n    axios.post('/contacts', entry)\r\n        .then(responce => responce.data)\r\n        .then(data => dispatch(addEntrySuccess(data)))\r\n        .catch(error => { dispatch(addEntryError(error.message)) })\r\n}\r\n\r\nexport const deleteEntry = id => dispatch => {\r\n\r\n    dispatch(deleteEntryRequest());\r\n    axios.delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteEntrySuccess(id)))\r\n        .catch(error => dispatch(deleteEntryError(error.message)))\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addEntry } from \"../../redux/entries/entries-operations\";\nimport styles from \"./InputForm.module.css\";\n\nclass InputForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onNameInput = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onNumberInput = (event) => {\n    this.setState({ number: event.target.value });\n  };\n\n  onSubmitEntry = (event) => {\n    event.preventDefault();\n    this.props.onAddEntry(this.state);\n    event.target.reset();\n  }\n\n  render() {\n    return (\n      <section className={styles.newEntrySection}>\n        <form className={styles.inputForm} onSubmit={this.onSubmitEntry}>\n          <label className=\"inputLabel\">\n            First / Last name :\n            <input\n              className=\"inputField\"\n              type=\"text\"\n              onChange={this.onNameInput}\n              required\n            />\n          </label>\n          <label className=\"inputLabel\">\n            Phone number :\n            <input\n              className=\"inputField\"\n              type=\"tel\"\n              onChange={this.onNumberInput}\n              required\n            />\n          </label>\n          <button className={styles.newEntryButton} type=\"submit\">\n            Add entry\n          </button>\n        </form>\n      </section>\n    );\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddEntry: entry => dispatch(addEntry(entry)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { onChangeFilter } from \"../../redux/filter/filter-actions\";\nimport styles from \"./Filter.module.css\";\n\nclass Filter extends React.Component {\n\n  filterChangeHandler = (event) => {\n    this.props.onChangeFilter(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className={styles[\"filter\"]}>\n        <label className={styles[\"filter-label\"]}>\n          Find contacts by name\n          <br />\n          <input\n            className={styles[\"filter-input\"]}\n            type=\"text\"\n            onChange={this.filterChangeHandler}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (value) => dispatch(onChangeFilter(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import { createSelector } from 'reselect';\r\n\r\nconst getAllEntries = state => state.contacts.items.entries;\r\nconst getFilterState = state => state.contacts.filter;\r\nexport const getLoadingState = state => state.contacts.items.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getAllEntries, getFilterState],\r\n    (entries, filterValue) => entries.filter((entry) => entry.name.includes(filterValue))\r\n)\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteEntry,\n  fetchEntries,\n} from \"../../redux/entries/entries-operations\";\nimport { getLoadingState } from \"../../redux/entries/entries-selectors\";\nimport { getFilteredContacts } from \"../../redux/entries/entries-selectors\";\nimport styles from \"./PbookList.module.css\";\n\nclass PbookList extends React.Component {\n  componentDidMount() {\n    this.props.onFetchEntries();\n  }\n\n  render() {\n    const { entries, onDelete } = this.props;\n    return (\n      <section>\n        <div className={`${styles.entry} ${styles.pbookHeader}`}>\n          <span>Name</span>\n          <span>Phone number</span>\n          <span>Actions</span>\n        </div>\n        <ul className={styles.pbookList}>\n          {entries.map((entry) => (\n            <li key={entry.id} className={styles.entry}>\n              <span>{entry.name}</span>\n              <span>{entry.number}</span>\n              <div className={styles.controlBtnContainer}>\n                <button\n                  className={styles.entryControlBtn}\n                  type=\"button\"\n                  data-id={entry.id}\n                  onClick={onDelete}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  entries: getFilteredContacts(state),\n  loading: getLoadingState(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (event) => dispatch(deleteEntry(Number(event.target.dataset.id))),\n  onFetchEntries: () => dispatch(fetchEntries()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PbookList);\n","import React, { Component } from 'react';\nimport InputForm from './components/InputForm/';\nimport Filter from './components/Filter'\nimport PbookList from './components/PbookList';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1>PhoneBook / home</h1>\n        <InputForm />\n        <Filter />\n        <PbookList />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}